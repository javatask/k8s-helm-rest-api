openapi: 3.1.3
info:
  title: Helm API Server
  description: |
    A RESTful API server that exposes Helm operations as HTTP endpoints, providing a 
    service-oriented interface to Helm functionality.
  version: 1.0.0
  contact:
    name: Andrii
    email: blog@javatask.dev
servers:
  - url: http://localhost:8080/api/v1
    description: Local development server
  - url: https://helm-api.example.com/api/v1
    description: Production server
tags:
  - name: health
    description: Health check endpoints
  - name: charts
    description: Chart installation and management operations
  - name: releases
    description: Release information and management

components:
  schemas:
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
        message:
          type: string
          description: A message describing the result of the operation
        data:
          type: object
          description: The response data payload
    
    ChartInstallRequest:
      type: object
      required:
        - releaseName
        - chartName
      properties:
        releaseName:
          type: string
          description: Name of the release
        chartName:
          type: string
          description: Name of the chart to install
        repoURL:
          type: string
          description: URL of the chart repository
        version:
          type: string
          description: Version of the chart to install
        namespace:
          type: string
          description: Kubernetes namespace to install into
          default: default
        values:
          type: object
          description: Values to pass to the chart
        wait:
          type: boolean
          description: Whether to wait for resources to be ready
          default: false
        timeout:
          type: integer
          description: Timeout in seconds
          default: 300
        createNamespace:
          type: boolean
          description: Whether to create the namespace if it doesn't exist
          default: false
        dryRun:
          type: boolean
          description: Simulate an installation
          default: false
        clientOnly:
          type: boolean
          description: If true, it will only render the templates locally
          default: false
        description:
          type: string
          description: Description of the release
    
    ChartUpgradeRequest:
      allOf:
        - $ref: '#/components/schemas/ChartInstallRequest'
        - type: object
          properties:
            reuseValues:
              type: boolean
              description: Whether to reuse the last release's values
              default: false
            resetValues:
              type: boolean
              description: Whether to reset the values to the chart's built-ins
              default: false
            force:
              type: boolean
              description: Force resource update through uninstall/recreate if needed
              default: false
    
    ChartUninstallRequest:
      type: object
      required:
        - releaseName
      properties:
        releaseName:
          type: string
          description: Name of the release to uninstall
        namespace:
          type: string
          description: Kubernetes namespace
          default: default
        keepHistory:
          type: boolean
          description: If true, release history will be kept
          default: false
        wait:
          type: boolean
          description: Whether to wait for resources to be deleted
          default: false
        timeout:
          type: integer
          description: Timeout in seconds
          default: 300
        dryRun:
          type: boolean
          description: Simulate an uninstallation
          default: false
        description:
          type: string
          description: Description of the uninstall operation
    
    ReleaseInfo:
      type: object
      properties:
        name:
          type: string
          description: Name of the release
        namespace:
          type: string
          description: Kubernetes namespace
        version:
          type: integer
          description: Version/revision of the release
        status:
          type: string
          description: Status of the release
          enum: [deployed, failed, pending-install, pending-upgrade, pending-rollback, uninstalling, superseded, uninstalled]
        lastDeployed:
          type: string
          format: date-time
          description: Timestamp of when the release was last deployed
        chart:
          type: string
          description: Name of the chart
        appVersion:
          type: string
          description: Application version of the release
    
    ReleaseDetails:
      allOf:
        - $ref: '#/components/schemas/ReleaseInfo'
        - type: object
          properties:
            description:
              type: string
              description: Description of the release
            firstDeployed:
              type: string
              format: date-time
              description: Timestamp of when the release was first deployed
            chartVersion:
              type: string
              description: Version of the chart
            values:
              type: object
              description: Configuration values for the release
            manifest:
              type: string
              description: Kubernetes manifest for the release
            notes:
              type: string
              description: Notes provided by the chart
    
    ReleaseHistoryEntry:
      type: object
      properties:
        revision:
          type: integer
          description: Revision number of the release
        status:
          type: string
          description: Status of the release at this revision
        chart:
          type: string
          description: Name of the chart
        chartVersion:
          type: string
          description: Version of the chart
        appVersion:
          type: string
          description: Application version
        description:
          type: string
          description: Description of the revision
        deployedAt:
          type: string
          format: date-time
          description: When this revision was deployed

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'

paths:
  /health:
    get:
      tags:
        - health
      summary: Health check
      description: Check if the API server is running
      operationId: healthCheck
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
  
  /charts/install:
    post:
      tags:
        - charts
      summary: Install a Helm chart
      description: Install a Helm chart into a Kubernetes cluster
      operationId: installChart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartInstallRequest'
      responses:
        '200':
          description: Chart installed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ReleaseInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /charts/upgrade:
    put:
      tags:
        - charts
      summary: Upgrade a Helm chart
      description: Upgrade an existing Helm chart release
      operationId: upgradeChart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartUpgradeRequest'
      responses:
        '200':
          description: Chart upgraded successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ReleaseInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /charts/uninstall:
    delete:
      tags:
        - charts
      summary: Uninstall a Helm chart
      description: Uninstall a Helm chart release from a Kubernetes cluster
      operationId: uninstallChart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChartUninstallRequest'
      responses:
        '200':
          description: Chart uninstalled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /releases:
    get:
      tags:
        - releases
      summary: List releases
      description: List all Helm releases
      operationId: listReleases
      parameters:
        - name: namespace
          in: query
          description: Kubernetes namespace
          required: false
          schema:
            type: string
            default: "default"
        - name: all-namespaces
          in: query
          description: If true, list releases across all namespaces
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: A list of releases
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ReleaseInfo'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /releases/{name}:
    get:
      tags:
        - releases
      summary: Get release details
      description: Get detailed information about a specific release
      operationId: getRelease
      parameters:
        - name: name
          in: path
          description: Release name
          required: true
          schema:
            type: string
        - name: namespace
          in: query
          description: Kubernetes namespace
          required: false
          schema:
            type: string
            default: "default"
      responses:
        '200':
          description: Release details
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ReleaseDetails'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /releases/{name}/history:
    get:
      tags:
        - releases
      summary: Get release history
      description: Get the revision history of a specific release
      operationId: getReleaseHistory
      parameters:
        - name: name
          in: path
          description: Release name
          required: true
          schema:
            type: string
        - name: namespace
          in: query
          description: Kubernetes namespace
          required: false
          schema:
            type: string
            default: "default"
      responses:
        '200':
          description: Release revision history
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ReleaseHistoryEntry'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  
  /releases/{name}/status:
    get:
      tags:
        - releases
      summary: Get release status
      description: Get the current status of a specific release
      operationId: getReleaseStatus
      parameters:
        - name: name
          in: path
          description: Release name
          required: true
          schema:
            type: string
        - name: namespace
          in: query
          description: Kubernetes namespace
          required: false
          schema:
            type: string
            default: "default"
      responses:
        '200':
          description: Release status
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Release name
                          namespace:
                            type: string
                            description: Kubernetes namespace
                          status:
                            type: string
                            description: Release status
                          revision:
                            type: integer
                            description: Release revision number
                          updated:
                            type: string
                            format: date-time
                            description: Last updated time
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
